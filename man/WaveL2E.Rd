% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WaveL2E.R
\name{WaveL2E}
\alias{WaveL2E}
\title{Wavelet Analysis with L2E and L2E_chi^2 methods}
\usage{
WaveL2E(
  x,
  date = NULL,
  block = 1,
  base_plot = TRUE,
  L2E = TRUE,
  Chi_square = TRUE
)
}
\arguments{
\item{x}{a series}

\item{date}{a date series}

\item{block}{number of observations within a block

Default: \code{1}.}

\item{base_plot}{Plot wavelet power spectrum of x? Logical

Default: \code{TRUE}.}

\item{L2E}{Apply L2E thresholding method? Logical

Default: \code{TRUE}.}

\item{Chi_square}{Apply L2E_Chi_square thresholding method? Logical

Default: \code{TRUE}.}
}
\value{
A list of class \code{"WaveL2E"} with elements of different dimensions.
%%%%%%%%%%%%%%%%%
Here is a detailed list of all elements:
#' %%%%%%%%%%%%%%%%%
\item{sig}{tmp}
\item{w}{tmp}
\item{dis0}{tmp}
\item{thresh}{threshold of \code{x} with \eqn{L2E} thresholding}
\item{qthresh}{threshold of \code{x} with \eqn{L2E(\chi^2)} thresholding}
\item{original}{wavelet analysis of \code{x} without thresholding}
\item{Ana_Wave}{wavelet analysis of \code{x} with \eqn{L2E} thresholding}
\item{Emp_WaveL2E}{tmp}
\item{Emp_WaveL2E_MAD}{tmp}
\item{recon_L2E}{reconstructed series of \code{x} with \eqn{L2E} thresholding}
\item{PTV_L2E}{percentage of total volume of \code{x} with \eqn{L2E} thresholding}
\item{PSL_L2E}{percentage of significance area of \code{x} with \eqn{L2E} thresholding}
\item{recon_Chi_square}{reconstructed series of \code{x} with \eqn{L2E(\chi^2)} thresholding}
\item{PTV_Chi_square}{percentage of total volume of \code{x} with \eqn{L2E(\chi^2)} thresholding}
\item{PSL_Chi_square}{percentage of significance area of \code{x} with \eqn{L2E(\chi^2)} thresholding}
\item{date}{the corrsponding date series}
}
\description{
This function is based on L2E and L2E_chi^2 thresholding techniques.
}
\details{
WaveL2E
}
\examples{
\dontrun{
## The following example is adopted from Raath et al., 2020:
## library(CoFESWave)


#install.packages("Metrics")
library("Metrics")
#install.packages('wavethresh')
library("wavethresh")
#install.packages('wmtsa')
library('wmtsa')
#Details (math included):
## https://www.rdocumentation.org/packages/wmtsa/versions/2.0-3/topics/wavShrink

#ebayesthresh
#https://cran.r-project.org/web/packages/EbayesThresh/EbayesThresh.pdf
#http://www.stats.ox.ac.uk/~silverma/ebayes/ebayesw.pdf
#install.packages("EbayesThresh")
library(EbayesThresh)
#install.packages("waveslim")
library(waveslim)

# An R Package of time series tools and utilities;
# Rmetrics - Financial Time Series Objects
#https://www.rdocumentation.org/packages/timeSeries
#install.packages("timeSeries")
require(timeSeries)

# An R package with a collection of econometric functions for
# performance and risk analysis
#https://www.rdocumentation.org/packages/PerformanceAnalytics
#install.packages("PerformanceAnalytics")
require(PerformanceAnalytics)

# R package which includes Quantitative Financial Modelling Frameworks.
#https://www.rdocumentation.org/packages/quantmod
#install.packages("quantmod")
require(quantmod)

# An R package for Wavelet analysis and reconstruction of time series,
# cross-wavelets and phase-difference (with filtering options),
# significance with simulation algorithms.
# https://www.rdocumentation.org/packages/WaveletComp/versions/1.0
#install.packages("WaveletComp")
require(WaveletComp)

# devtools: Tools to Make Developing R Packages Easier
#https://www.rdocumentation.org/packages/devtools
#install.packages("devtools")
require(devtools) # using devtools to download from github

# R package for time series analysis using the Wavelet Scalogram
# from https://github.com/rbensua/wavScalogram
#install_github("rbensua/wavScalogram")
require(wavScalogram)

# biwavelet: Conduct Univariate and Bivariate Wavelet Analyses
# https://www.rdocumentation.org/packages/biwavelet
#install.packages("biwavelet")
require(biwavelet)

#Latex expersions
# library(latex2exp)

#Latex tables
library(knitr)

#Interactive Charts
library(highcharter)

##################

###########################

# Load the WaveL2E Function

###########################

# Figure 1 - Set up #

# Identify the tickers of interest
tickers <- c("CGW","XLE", "SPY")

# Download these tickers from Yahoo for the dates in the presentation
getSymbols(tickers,src="yahoo", from = "2007-06-01",to = "2018-01-26")
# original paper dates.

# Merge all the Price series into one dataframe
AllPrices <- do.call(merge, lapply(tickers, function(x) get(x)))

#Import Data from .RData file - this was the data from google
# If you try and download from google now this is the warning:
# "Error: 'getSymbols.google' is defunct.
# Google Finance stopped providing data in March, 2018."
# New Issue: https://github.com/joshuaulrich/quantmod/issues/221
#load("Water-Energy.Rdata")

# do not have missiong vaulesin the series so we interpolate for these values
AllPrices$CGW.Close <- interpNA(AllPrices$CGW.Close)
AllPrices$XLE.Close <- interpNA(AllPrices$XLE.Close)
AllPrices$SPY.Close <- interpNA(AllPrices$SPY.Close)

#Set up the correct data frame for prices
CGW <- as.data.frame((AllPrices$CGW.Close))
XLE <- as.data.frame((AllPrices$XLE.Close))
SPY <- as.data.frame((AllPrices$SPY.Close))

#Retrieve specific dates for this time frame (prices)
date1 <- index(AllPrices)


Data <- cbind(CGW[,1], XLE[,1], SPY[,1])


periodic_waveL2E <- WaveL2E(Data[,1], date = date1, block = 1)
periodic_waveL2E_2 <- WaveL2E(Data[,2], date= date1, block = 1)
periodic_waveL2E_3 <- WaveL2E(Data[,3], date= date1, block = 1)

rCGW <- as.data.frame(returns(AllPrices$CGW.Close))
rXLE <- as.data.frame(returns(AllPrices$XLE.Close))
rSPY <- as.data.frame(returns(AllPrices$SPY.Close))

#Retrieve specific dates for this time frame
date1 <- index(AllPrices)


Data <- cbind(rCGW[-1,1], rXLE[-1,1], rSPY[-1,1])


periodic_waveL2E_R <- WaveL2E(Data[,1], date = date1[-1], block = 1)
periodic_waveL2E_2_R <- WaveL2E(Data[,2], date= date1[-1], block = 1)
periodic_waveL2E_3_R <- WaveL2E(Data[,3], date= date1[-1], block = 1)

}


}
\author{
CoFES.
}
